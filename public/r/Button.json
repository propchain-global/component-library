{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "Button",
  "type": "registry:ui",
  "title": "Base Button",
  "description": "A base button component",
  "files": [
    {
      "path": "components/ui/button.tsx",
      "content": "import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"@/lib/utils\";\nimport { LoaderCircle } from \"lucide-react\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2x whitespace-nowrap rounded-Button-xl ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-neutral-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        primary: \"bg-button-accent-default hover:bg-button-accent-hover disabled:bg-button-accent-disabled text-button-accent-default hover:text-button-accent-hover disabled:text-button-accent-disabled\",\n        secondary: \"bg-button-secondary-default hover:bg-button-secondary-hover disabled:bg-button-secondary-disabled text-button-secondary-default hover:text-button-secondary-hover disabled:text-button-secondary-disabled border-button-secondary-default hover:border-button-secondary-hover disabled:border-button-secondary-disabled\",\n        default: \"bg-button-accent-default hover:bg-button-accent-hover disabled:bg-button-accent-disabled text-button-accent-default hover:text-button-accent-hover disabled:text-button-accent-disabled\",\n        alert:\n          \"bg-button-tertiary-alert-default hover:bg-button-tertiary-alert-hover disabled:bg-button-tertiary-alert-disabled text-button-tertiary-alert-default hover:text-button-tertiary-alert-hover disabled:text-button-tertiary-alert-disabled\",\n        outline:\n          \"border border-button-outline-neutral-default hover:border-button-outline-neutral-hover disabled:bg-button-outline-neutral-disabled text-button-outline-neutral-default text-button-outline-neutral-default hover:text-button-outline-neutral-hover disabled:text-button-outline-neutral-disabled bg-button-outline-neutral-default hover:bg-button-outline-neutral-hover\",\n        link: \"text-button-link-neutral-default hover:text-button-link-neutral-hover disabled:text-button-link-neutral-disabled\",\n        tertiary : \"bg-button-tertiary-accent-default hover:bg-button-tertiary-accent-hover disabled:bg-button-tertiary-accent-disabled text-button-tertiary-accent-default hover:text-button-tertiary-accent-hover disabled:text-button-tertiary-accent-disabled disabled:border-button-tertiary-accent-disabled hover:border-button-tertiary-accent-hover\"\n      },\n      size: {\n        xl: \"text-body-m-strong px-4x py-3x\",\n        l: \"text-body-m-strong px-4x py-2x\",\n        m: \"text-body-s-strong px-3x py-1.5x\",\n        s: \"text-body-s-strong py-1x px-2x\",\n      },\n    },\n    defaultVariants: {\n      variant: \"primary\",\n      size: \"xl\",\n    },\n    compoundVariants: [\n      {\n        variant: \"secondary\",\n        size: \"xl\",\n        className: \"border-button-xl\",\n      },\n      {\n        variant: \"secondary\",\n        size: \"l\",\n        className: \"border-button-l\",\n      },\n      {\n        variant: \"secondary\",\n        size: \"m\",\n        className: \"border-button-m\",\n      },\n      {\n        variant: \"secondary\",\n        size: \"s\",\n        className: \"border-button-s\",\n      },\n    ],\n  }\n);\n\nconst iconSizeMap: Record<string, string> = {\n  xl: 'h-[20px] w-[20px]',\n  l: 'h-[20px] w-[20px]',\n  m: 'h-[16px] w-[16px]',\n  s: 'h-[16px] w-[16px]',\n};\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n  IconLeft?: React.JSXElementConstructor<{className?: string}>;\n  IconRight?: React.JSXElementConstructor<{className?: string}>;\n  is_loading?: boolean;\n  size?: \"xl\" | \"l\" | \"m\" | \"s\";\n  variant?: \"primary\" | \"alert\" | \"outline\" | \"link\" | \"tertiary\";\n  disabled?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant = 'primary', size = 'xl', asChild = false, IconLeft, IconRight, disabled = false, is_loading,children, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\";\n\n    const iconSizeClass = iconSizeMap[size] || 'h-5x';\n\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className })) + `${variant === 'link' ? ' px-none py-none' : ''}`}\n        ref={ref}\n        {...props}\n        disabled={disabled}\n      >\n        {is_loading ? (\n          <div>\n            <LoaderCircle className={`animate-spin ${iconSizeClass}`} />\n          </div>\n        ) : (\n          <>\n            {IconLeft && <IconLeft className={`${iconSizeClass}`} />}\n            {children}\n            {IconRight && <IconRight className={`${iconSizeClass}`} />}\n          </>\n        )}\n      </Comp>\n    );\n  }\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };",
      "type": "registry:ui"
    }
  ]
}